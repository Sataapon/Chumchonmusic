DROP TABLE IF EXISTS Admin;
DROP TABLE IF EXISTS Teacher;
DROP TABLE IF EXISTS Student;
DROP TABLE IF EXISTS Instrument;
DROP TABLE IF EXISTS Course;
DROP TABLE IF EXISTS Teach;
DROP TABLE IF EXISTS Enroll;
DROP TABLE IF EXISTS DateTime;

CREATE TABLE Admin (
	AdminId INTEGER PRIMARY KEY AUTOINCREMENT,
	Name TEXT UNIQUE NOT NULL,
	Username TEXT UNIQUE NOT NULL,
	Password TEXT NOT NULL
);

CREATE TABLE Teacher (
	TeacherId INTEGER PRIMARY KEY AUTOINCREMENT,
	Username TEXT UNIQUE NOT NULL,
	Password TEXT NOT NULL,
	Firstname TEXT NOT NULL,
	Lastname TEXT NOT NULL,
	Nickname TEXT NOT NULL,
	Birthday TEXT NOT NULL,
	Email TEXT UNIQUE,
	TelNum TEXT UNIQUE,
	LineId TEXT UNIQUE,
	Image BLOB
);

CREATE TABLE Student (
	StudentId INTEGER PRIMARY KEY AUTOINCREMENT,
	Username TEXT UNIQUE NOT NULL,
	Password TEXT NOT NULL,
	Firstname TEXT NOT NULL,
	Lastname TEXT NOT NULL,
	Nickname TEXT NOT NULL,
	Birthday TEXT NOT NULL,
	Email TEXT UNIQUE,
	TelNum TEXT UNIQUE,
	LineId TEXT UNIQUE,
	Image BLOB
);

CREATE TABLE Instrument (
	InstrumentId INTEGER PRIMARY KEY AUTOINCREMENT,
	Name TEXT UNIQUE NOT NULL	
);

CREATE TABLE Course (
	CourseId INTEGER PRIMARY KEY AUTOINCREMENT,
	Name TEXT NOT NULL,
	Price INTEGER NOT NULL,
	HousPerTime INTEGER NOT NULL,
	NumOfTime INTEGER NOT NULL,
	InstrumentId INTEGER NOT NULL,
	FOREIGN KEY (InstrumentId) REFERENCES Instrument (InstrumentId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Teach (
	CourseId INTEGER,
	TeacherId INTEGER,
	PRIMARY KEY (CourseId, TeacherId),
	FOREIGN KEY (CourseId) REFERENCES Course (CourseId) ON DELETE CASCADE ON UPDATE CASCADE
	FOREIGN KEY (TeacherId) REFERENCES Teacher (TeacherId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Enroll (
	CourseId INTEGER,
	StudentId INTEGER,
	NumOfAttens INTEGER NOT NULL,
	PRIMARY KEY (CourseId, StudentId),
	FOREIGN KEY (CourseId) REFERENCES Course (CourseId) ON DELETE CASCADE ON UPDATE CASCADE
	FOREIGN KEY (StudentId) REFERENCES Student (StudentId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Study (
	StudentId INTEGER,
	TeacherId INTEGER,
	PRIMARY KEY (StudentId, TeacherId),
	FOREIGN KEY (StudentId) REFERENCES Student (StudentId) ON DELETE CASCADE ON UPDATE CASCADE
	FOREIGN KEY (TeacherId) REFERENCES Teacher (TeacherId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE DayTime (
	TeacherId INTEGER,
	StudentId INTEGER,
	Date TEXT,
	Time TEXT,
	PRIMARY KEY (TeacherId, StudentId, Date, Time),
	FOREIGN KEY (TeacherId, StudentId) REFERENCES Study (TeacherId, StudentId) ON DELETE CASCADE ON UPDATE CASCADE
);